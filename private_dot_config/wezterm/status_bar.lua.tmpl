-- vim: ft=lua.chezmoitmpl
local wezterm = require("wezterm")

local round = function(number, multiple)
	local remainder = number % multiple
	return math.floor(number - remainder + (remainder > multiple / 2 and multiple or 0))
end

local battery_icon = {
	[00] = wezterm.nerdfonts.md_battery_alert,
	[10] = wezterm.nerdfonts.md_battery_10,
	[20] = wezterm.nerdfonts.md_battery_20,
	[30] = wezterm.nerdfonts.md_battery_30,
	[40] = wezterm.nerdfonts.md_battery_40,
	[50] = wezterm.nerdfonts.md_battery_50,
	[60] = wezterm.nerdfonts.md_battery_60,
	[70] = wezterm.nerdfonts.md_battery_70,
	[80] = wezterm.nerdfonts.md_battery_80,
	[90] = wezterm.nerdfonts.md_battery_90,
	[100] = wezterm.nerdfonts.md_battery,
}

-- Recommended configuration:
wezterm.on("update-status", function(window, pane)
	local status_generator = require("wez-status-generator.plugin")
	local left_status = status_generator.generate_left_status({
		sections = {
			{
				components = {
					function()
						local workspace = window:mux_window():get_workspace()
						local base_path = string.gsub(workspace, "(.*[/\\])(.*)", "%2")
						return wezterm.nerdfonts.fa_circle_o_notch .. " " .. base_path
					end,
				},
				foreground = "#7aa2f7",
				background = "#3b4261",
			},
			{
				components = {
					function()
						local tab_id = window:mux_window():active_tab():tab_id()
						local pane_id = pane:pane_id()

						return tab_id .. ":" .. pane_id
					end,
				},
				foreground = "#a9b1d6",
				background = "#16161e",
			},
		},
		separator = wezterm.nerdfonts.ple_upper_left_triangle,
		hide_empty_sections = true,
	})

	window:set_left_status(left_status)

	local right_status = status_generator.generate_right_status({
		sections = {
			{
				components = {
					function()
            {{ if eq .chezmoi.os "windows" -}}
						return wezterm.nerdfonts.fa_user .. " " .. os.getenv("UserName")
            {{ else -}}
						return wezterm.nerdfonts.fa_user .. " " .. os.getenv("USER")
            {{ end -}}
					end,
				},
				foreground = "#000000",
				background = "#f5c2e7",
			},
			{
				components = {
					function()
						return wezterm.nerdfonts.	fa_desktop .. " " .. wezterm.hostname()
					end,
				},
				foreground = "#000000",
				background = "#cba6f7",
			},
			{
				components = {
					function()
						return wezterm.nerdfonts.fa_calendar .. " " .. wezterm.strftime("%Y-%m-%d")
					end,
				},

				background = "#89b4fa",
				foreground = "#000000",
			},
			{
				components = {
					function()
						return wezterm.nerdfonts.fa_clock_o .. " " .. wezterm.strftime("%H:%M:%S")
					end,
				},
				foreground = "#7aa2f7",
				background = "#3b4261",
			},

			{{ if eq .chezmoi.hostname "rowdy-sasquatch" -}}
			{
				components = {
					function()
						local bat = ""
						for _, b in ipairs(wezterm.battery_info()) do
							local charge = b.state_of_charge * 100
							local icon = wezterm.nerdfonts.md_battery
							if b.state == "Charging" then
								icon = wezterm.nerdfonts.fa_plug
							elseif b.state == "Discharging" then
								icon = battery_icon[round(charge, 10)]
							elseif b.state == "Empty" then
								icon = wezterm.nerdfonts.md_battery_alert_variant_outline
							elseif b.state == "Full" then
								icon = wezterm.nerdfonts.md_battery_check
							elseif b.state == "Unknown" then
								icon = wezterm.nerdfonts.fa_question
							end
							bat = icon .. " " .. string.format("%.0f%%", charge)
						end
						return bat
					end,
				},
				background = "#f9e2af",
				foreground = "#000000",
			},
      {{ end -}}
		},
		separator = wezterm.nerdfonts.ple_lower_right_triangle,
		hide_empty_sections = true,
	})

	window:set_right_status(right_status)
end)

local SOLID_LEFT = "█"
local SOLID_RIGHT = "█"
-- -- The filled in variant of the < symbol
-- local SOLID_LEFT_ARROW = wezterm.nerdfonts.ple_ice_waveform
--
-- -- The filled in variant of the > symbol
-- local SOLID_RIGHT_ARROW = wezterm.nerdfonts.ple_ice_waveform_mirrored

-- This function returns the suggested title for a tab.
-- It prefers the title that was set via `tab:set_title()`
-- or `wezterm cli set-tab-title`, but falls back to the
-- title of the active pane in that tab.
local function tab_title(tab_info)
	local title = tab_info.tab_title
	-- if the tab title is explicitly set, take that
	if title and #title <= 0 then
		title = tab_info.active_pane.title
	end
	-- Otherwise, use the title from the active pane
	-- in that tab
	return title .. " " -- tab_info.active_pane.title
end

local tab_icons = {
	[0]  = wezterm.nerdfonts.fae_cc_zero,
	[1]  = wezterm.nerdfonts.md_numeric_1,
	[2]  = wezterm.nerdfonts.md_numeric_2,
	[3]  = wezterm.nerdfonts.md_numeric_3,
	[4]  = wezterm.nerdfonts.md_numeric_4,
	[5]  = wezterm.nerdfonts.md_numeric_5,
	[6]  = wezterm.nerdfonts.md_numeric_6,
	[7]  = wezterm.nerdfonts.md_numeric_7,
	[8]  = wezterm.nerdfonts.md_numeric_8,
	[9]  = wezterm.nerdfonts.md_numeric_9,
}

wezterm.on("format-tab-title", function(tab, tabs, panes, config, hover, max_width)
	local edge_background = "#333333"
	local background = "#89b4fa"
	local foreground = "#000000"
	local title_foreground = "#cdd5f1"

	if tab.is_active then
		background = "#fab387"
		foreground = "#000000"
	elseif hover then
		background = "#f38847"
		foreground = "#000000"
	end

	local arrow_foreground = background

	local title = tab_title(tab)

	-- ensure that the titles fit in the available space,
	-- and that we have room for the edges.
	title = wezterm.truncate_right(title, max_width - 9)

  local tab_icon = ""

  local index = tostring(tab.tab_index + 1)

  index:gsub(".", function(n)
    tab_icon = tab_icon .. tab_icons[tonumber(n)] 
  end)

	return {
		{ Background = { Color = edge_background } },
		{ Foreground = { Color = edge_background } },
		{ Text = SOLID_LEFT },
		{ Background = { Color = edge_background } },
		{ Foreground = { Color = title_foreground } },
		{ Text = title },
		{ Background = { Color = edge_background } },
		{ Foreground = { Color = edge_background } },
		{ Text = SOLID_RIGHT },
		{ Foreground = { Color = arrow_foreground } },
		{ Text = SOLID_LEFT },
		{ Background = { Color = background } },
		{ Foreground = { Color = foreground } },
		{ Text = tab_icon },
		{ Background = { Color = edge_background } },
		{ Foreground = { Color = arrow_foreground } },
		{ Text = SOLID_RIGHT },
	}
end)

return {
	tab_bar_at_bottom = true,
	use_fancy_tab_bar = false,
	tab_max_width = 36,
}
